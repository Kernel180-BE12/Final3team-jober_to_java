name: CI/CD Spring Boot JAR to EC2

on:
    push:
        branches: ["main", "chore/github-actions-pipeline"]

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                  java-version: '21'
                  distribution: 'temurin'

            - name: Build with Maven
              run: mvn clean package -DskipTests

            - name: Upload JAR to EC2
              uses: appleboy/scp-action@v0.1.7
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ubuntu
                  key: ${{ secrets.EC2_SSH_KEY }}
                  source: "target/*.jar,scripts/*"
                  target: "/home/ubuntu/"

            # 준비(줄바꿈/권한/JAR 확인) — 안전
            - name: Prepare scripts on EC2
              uses: appleboy/ssh-action@v0.1.6
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ubuntu
                  key: ${{ secrets.EC2_SSH_KEY }}
                  script: |
                      set -e
                      sed -i 's/\r$//' /home/ubuntu/scripts/*.sh || true
                      chmod +x /home/ubuntu/scripts/*.sh
                      ls -al /home/ubuntu/target/*.jar

            # stop — 세션 끊겨도 통과
            - name: Stop application on EC2 (allow disconnect)
              uses: appleboy/ssh-action@v0.1.6
              continue-on-error: true
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ubuntu
                  key: ${{ secrets.EC2_SSH_KEY }}
                  script: |
                      /home/ubuntu/scripts/stop.sh || true

            # start — 이 스텝에는 오직 start.sh만! (jober-app 들어간 명령 금지)
            - name: Start application on EC2
              uses: appleboy/ssh-action@v0.1.6
              env:
                  DB_URL: ${{ secrets.DB_URL }}
                  DB_USER: ${{ secrets.DB_USER }}
                  DB_PASS: ${{ secrets.DB_PASS }}
                  JWT_SECRET: ${{ secrets.JWT_SECRET }}
                  OTP_PEPPER: ${{ secrets.OTP_PEPPER }}
                  REFRESH_PEPPER: ${{ secrets.REFRESH_PEPPER }}
                  VERIFY_BASE_URL: ${{ secrets.VERIFY_BASE_URL }}
                  AI_BASE_URL: ${{ secrets.AI_BASE_URL }}
                  CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
                  APP_COOKIE_SAMESITE: ${{ secrets.APP_COOKIE_SAMESITE }}
                  APP_COOKIE_SECURE: ${{ secrets.APP_COOKIE_SECURE }}
                  APP_COOKIE_MAX_AGE: ${{ secrets.APP_COOKIE_MAX_AGE }}
                  APP_COOKIE_PATH: ${{ secrets.APP_COOKIE_PATH }}
                  CSRF_ENABLED: ${{ secrets.CSRF_ENABLED }}
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ubuntu
                  key: ${{ secrets.EC2_SSH_KEY }}
                  envs: DB_URL,DB_USER,DB_PASS,JWT_SECRET,OTP_PEPPER,REFRESH_PEPPER,VERIFY_BASE_URL,AI_BASE_URL,CORS_ALLOWED_ORIGINS,APP_COOKIE_SAMESITE,APP_COOKIE_SECURE,APP_COOKIE_MAX_AGE,APP_COOKIE_PATH,CSRF_ENABLED
                  script: |
                      set -euo pipefail
                      /home/ubuntu/scripts/start.sh

            # health — 이제 별도 세션이므로 'jober-app' 문자열 써도 안전
            - name: Health check on EC2
              uses: appleboy/ssh-action@v0.1.6
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ubuntu
                  key: ${{ secrets.EC2_SSH_KEY }}
                  script: |
                      sleep 2
                      ss -ltnp | grep :8080 || true
                      tail -n 150 /home/ubuntu/jober-app.log || true
